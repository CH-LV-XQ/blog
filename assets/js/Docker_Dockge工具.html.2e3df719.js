"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5284],{6262:(s,i)=>{i.A=(s,i)=>{const e=s.__vccOpts||s;for(const[s,a]of i)e[s]=a;return e}},7961:(s,i,e)=>{e.r(i),e.d(i,{comp:()=>k,data:()=>p});var a=e(641);const l=e.p+"assets/img/dockge-login.9edfb8b4.png",n=e.p+"assets/img/dockge-main.dc2ab054.png",t={},k=(0,e(6262).A)(t,[["render",function(s,i){return(0,a.uX)(),(0,a.CE)("div",null,i[0]||(i[0]=[(0,a.Fv)('<h1 id="dockge-可视化管理工具" tabindex="-1"><a class="header-anchor" href="#dockge-可视化管理工具"><span>Dockge 可视化管理工具</span></a></h1><p>Dockge是一款界面炫酷、易于使用的Docker Compose可视化管理工具。</p><p>Dockge具有如下特性：</p><ul><li>具有compose.yaml文件管理功能，支持容器的Create/Edit/Start/Stop/Restart/Delete操作，并支持更新镜像。</li><li>具有交互式的compose.yaml编辑器。</li><li>具有交互式的Web终端功能。</li><li>能将docker run命令自动转化为compose.yaml脚本。</li><li>支持响应式输出，任何信息都能实时输出。</li><li>具有简单易用的功能和炫酷的UI界面。</li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>使用Docker来安装Dockge非常方便，我们将采用此种方式</p><ul><li>首先通过如下命令下载Dockge的镜像</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> louislam/dockge:1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>下载完成后通过如下命令运行Dockge的容器</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 9999:5001</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dockge</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-e </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;DOCKGE_STACKS_DIR=/opt/stacks&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-e </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;DOCKGE_ENABLE_CONSOLE=true&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/var/run/docker.sock:/var/run/docker.sock</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/opt/dockge/data:/app/data</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/opt/dockge/stacks:/opt/stacks</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-d </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">louislam/dockge:1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或使用Docker compose运行</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;3.8&quot;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  dockge</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">louislam/dockge:latest</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">dockge</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">unless-stopped</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">5031:5001</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/var/run/docker.sock:/var/run/docker.sock</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/opt/dockge/data:/app/data</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/opt/dockge/stacks:/opt/stackss</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">DOCKGE_STACKS_DIR=/opt/stacks</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>容器运行成功后，就可以访问Dockge的Web页面了，初次启动需要创建管理员账号，访问地址：http://127.0.0.1:5001 <img src="'+l+'" alt="dockge-login.png" loading="lazy"> 创建账号并完成登录，展示如下界面： <img src="'+n+'" alt="dockge-main.png" loading="lazy"></li></ul>',13)]))}]]),p=JSON.parse('{"path":"/Docker/Dockge%E5%B7%A5%E5%85%B7.html","title":"Dockge 可视化管理工具","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-05-21T00:00:00.000Z","category":["Docker"],"tag":["Docker"],"description":"Dockge 可视化管理工具 Dockge是一款界面炫酷、易于使用的Docker Compose可视化管理工具。 Dockge具有如下特性： 具有compose.yaml文件管理功能，支持容器的Create/Edit/Start/Stop/Restart/Delete操作，并支持更新镜像。 具有交互式的compose.yaml编辑器。 具有交互式的We...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/Docker/Dockge%E5%B7%A5%E5%85%B7.html"}],["meta",{"property":"og:title","content":"Dockge 可视化管理工具"}],["meta",{"property":"og:description","content":"Dockge 可视化管理工具 Dockge是一款界面炫酷、易于使用的Docker Compose可视化管理工具。 Dockge具有如下特性： 具有compose.yaml文件管理功能，支持容器的Create/Edit/Start/Stop/Restart/Delete操作，并支持更新镜像。 具有交互式的compose.yaml编辑器。 具有交互式的We..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-28T05:41:15.000Z"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:published_time","content":"2025-05-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-28T05:41:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dockge 可视化管理工具\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-21T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-28T05:41:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]}],"git":{"createdTime":1747994146000,"updatedTime":1751089275000,"contributors":[{"name":"ch","email":"ch825523424@163.com","commits":2}]},"readingTime":{"minutes":1.06,"words":319},"filePathRelative":"Docker/Dockge工具.md","localizedDate":"2025年5月21日","excerpt":"\\n<p>Dockge是一款界面炫酷、易于使用的Docker Compose可视化管理工具。</p>\\n<p>Dockge具有如下特性：</p>\\n<ul>\\n<li>具有compose.yaml文件管理功能，支持容器的Create/Edit/Start/Stop/Restart/Delete操作，并支持更新镜像。</li>\\n<li>具有交互式的compose.yaml编辑器。</li>\\n<li>具有交互式的Web终端功能。</li>\\n<li>能将docker run命令自动转化为compose.yaml脚本。</li>\\n<li>支持响应式输出，任何信息都能实时输出。</li>\\n<li>具有简单易用的功能和炫酷的UI界面。</li>\\n</ul>","autoDesc":true}')}}]);